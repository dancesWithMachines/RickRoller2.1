<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="songPath.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>38, 10</value>
  </metadata>
  <metadata name="filePath.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>141, 10</value>
  </metadata>
  <metadata name="fileSystemWatcher1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>233, 10</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMjIAAAEAGABoHwAAFgAAACgAAAAyAAAAZAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABte5tcc5GgvtK+2uu10u1uir1zfapZWXE5PlYuOlAtOU4sOEo4QlNRVmhWV2ZPUF5kbHeJma9ofK1Q
        bK9Ub7ZUcbdTcLZOb7NPbrZIYKw4UJ1DWahUardbcLxccb5edMBgdsJjesVnfslsgMZ3jMSZrdGfstCF
        kK85PVs1OUo2OEYzNkQwNEItMz8rMjwqMjwpLzsjKjYAAGl7m1dukJi1z77a6sHe9KbD7XiDrW9thD1A
        WCYzSiMyRSMyQzlEVV1jdGhqeWRlc3J2gH+GmmF0pVFurlNwtFZztlVytVBvsENeozZOli9HkCxEiz9X
        m1dusV91vGJ4v2N4wGN6w2Z+yGt/ymqAxn2UxpmvzZinxEJMbDA4TDQ3RTM2RDI1QzE0QTAzPi4zPi0x
        PCgsOAAAbH+eWW+QkrDMvNvqv9zxhp/PkZrGf3mQQkRbJjNKIjBFJDJFLjpKUlhnX2JzWlpodXWCeHmQ
        XG2gU2+vVXCyUW6wSWapO1idOVGaOlGcPVSfRVykSmOjTWajVGurW3K0YHi9Y3zDZn3Ia3/KbYDKbIHC
        jaPMmq7LZXCQMThSNThGNjdFNDZBMzVAMzVAMzVANzlEMjhEAABvgJ5lfJ2JqMS62OnE4POqwux1gK5z
        b4ZDQ1siMUgfLkQgL0MkM0I3P05GS15XWGVeYG9laIZYbKRQbq1Qba5LaalEYaRDXqdOaLNVbrpac79d
        dsBcd7ldebZada9Xca1ac7Ngeb5mfcVrgMhvgsttgst3jsSZq86Ej683Olo4N0k1N0Y0NkEzNUA3OEM/
        P0pHSFY8RloAAHKBoGN4m4WhwLbV58Xg8p213ZSk0HZ0jEdGXig0TCUySSY0SSc0SCg1SDZCUkhPXlJa
        a11pjlNupk9wrlNysFh3tV57vWN8xmaAzGiCzmiCzWuEzWuFyGiEwmiDvGV+tmB5tGN7uWd+wGqBw26D
        yHKFy3KFxZKjy5mkxEJFZTs5TTc5SDg4RTo4RUI/S1ZUYVFTZTRCXAAAfo6tYHWaf5q6ttTmxeDvq8Lo
        cX6reHWNREZdIy5KHyxDHyxCHiw/HCo9Hiw+IzBCLz9aVWiRVG6nU3SwWXi1YYC/aoXIbobMconOb4jN
        bojOb4rOcYrObojJbIjEbIfAaIO8Z3+6Z4C9a4PBboTGb4bJd4rKiZzIn6zKVlt6QD1TPj5NQT9OSEVT
        YmBscG57VFZpMkRfAACDlLRnfKR5lba00eLE4u6wyOmjr9uNiaNMTmYkMkshLkMfLUAeLT8gLUAjMUMs
        O0w8Tm9TbJ1Ucq1ZebVaerlce71gfMJmgsduictvisxwi81xi89wis9uictuisluisdviMRrg79qgr5s
        hMBvh8Rwh8d8ks2Im8air81tcpBFQllJRVVRTVlcV2RlY29ubnxSVmo2SWMAAHaLqm2BqXOOsK/L3sTh
        7bHL6H6PvIWDnktNZiYzTiAtQx8tQR4uQSQzRik4Siw7TkJYgVVvqFd1tFp6uVp4vFd0u1NvuE9rtFJq
        tVhwul94wmWBxWqFym6IzG+Ly2+MyW+Kx2yFwWuDv2yEwHCIxHOKx3ySyougyKOwzXl9mkpHXGhjb21n
        dGdlc2Nick5RYjlFWjNGYAAAhJm3boKpbIarqsjdwt7swNrzo7Leh4aiT1JqKjZTJjNKIS5EHi5CIzRH
        LDtPLD5eTGabVXKwVne4WXm7WHi7VHC6S2SzP1WtOkyoPUuqP1GsUmq4ZH3FbIXJborLborKb4vHbYfD
        a4O/aoK+cIjEd43HfpTJk6PKp6/MZ2eBWFVncG16XFloSk5dS1BhNj9SLT1SL0JcAACDmLhpfKNqg6yj
        wdm/3eu91u6Lnsl7gp9SWHAzPlwtO1glM08fLkkfLUYuO1ZCWo9UcK5UcrJXd7hYeLtWdLxTartOYLxW
        YsdfZ9BjaNNdZc1YZsBjdsVsg8luicxuistvi8hvicZuhcNqgsBthcJ6kciDmMmbps2Zm7V+eYl4eIdd
        YHErNkkmNUMmNUUrPE8wRVwuQ10AAHqOr22ApmR7o52808Df7MPe9Zat1IaSsGRqhENTckdaeklcfD5U
        cR0xUDRIcUxqpVBxslJ0tlR3ulZ2vVdvvlFjvVdlyltoz1llylxjzWRq1mtz12Z2ymyBym2Iym6Kym+K
        yXCLyHCIxmqCwWmBwnePxoSay5Obw4yLoZCKlomOmIOHmC85TiMzQyQ0RCY6TTBFXjBGYQAAfZGzcYSp
        WnKWl7fMwuLsudXtorbdn6S8aXCIT2WBV2yMX3eWfpu8VGuWRV6aUG6xUXK0UnW2VXe6V3e9WXC/WmPC
        XGfLZ3jIfJTSfJLMaHjEY27MbHjUboHPbojNborLborKb4rIcInHbIXDZ3/BcIfChJvOiJS8fn+ZgH+M
        kpWfgICRMTtQKDhJJTVHJjpOLEJbMUZiAACFmrxvgaZmfaGbu9HE5O251++Vq9aYm7dvcoxQYoFOYIBP
        ZYKDn72RqtpXcrNVcrVUdLZTdbdVdrtZeL9hdcRiacZTWrpgcL5oe8BsgMJneMJYZb9hbcxvf9Nwic9u
        ictuistvislyjMluh8VogMJpgsKDl9CLmseNl7KJkKCQj5xsbH0vN00nNkklNkknO08sQVs1SmYAAH+V
        uGt9ol92l6K/1Mbl7rXP67XP75afv1hcfD9KbUZWdD1Tb2eBoXKLvlZxtVRztVV0uFN1uVN1vFZ0vVRl
        tDtBkCEqeiw5hy48jjM/lT9Jnz5InkZRqWZ1y2+G0G2Iym2JynCMynOPy22HyGiBw2aAwniOyIqbyaOu
        yZKYq3p6i1RVaCg0SCQ1SCc6TSg9Uy5CXDhMaAAAeo6xbn2jT2ODqcbXx+Xuxd/ywNnwsbvZZ2qHNz5e
        P05sNk1uS2WOVnCrVHG1VHS2VXW5VHW8U3O9TGeyIjJ8CRZSChtNDBxVChpZDRpdERtgFB9kFSBpOkeN
        aHrDaYLIa4fIcY3LdJHMcIvLaYPFaILEcIbDhJbEl6DAgYeeT1FlLTdMKThMJzlOLUBXLkNZMkRfOU1q
        AACFlrpodJ9cbZGsx9vD4erL4vKyw9qiprlxbYQ5PV4/TXhEWpFOaKRUbrFQcLVSc7dVdblUdL1ScrxK
        ZLErOYwLF14CEkgKIE4QI1URI1sRIlsIGlUIGlcHGFhBVJdkfsFph8hwjct2ks5xjcxshshqhMZthsR6
        jr9yfaJVWnUyO1QrPVYtQ1w3Tmhcc4yDkqd3gJZOYIAAAFdliD1ReoCXs7rU5svi8rnH3qCnu6motXRy
        hT9GblZmoFpxtVRutVJttVJxt1FzuFJ2vFJ1vlByu1FuuUZcsCo9kxstfj1QlkthoU5joEhcmTNHiic6
        hDNGklFqrWWAw2mGyXCNynWRzXKOy2yIyGqFxm+Jx3GGvlVjki48YzFDY0xiglx3l4CcuKG3z6SuwouQ
        pVZlhAAAl6bDsMTfxNjtwtTnucjbtsHRqrK9tLfBhIeZV2ORYne2Xnm+Um+2T220T2+2UHK5VHW9U3W+
        UXO8UnC7Um26SmCzOk2kL0ObL0KaMEOaL0KaMkSaSV2tYnjAaoTIaoTHaYbIb4vKdZHOc4/LbYnHaYfH
        bYrIaH+/XWy1WGmvUWadYnuka4iqnbnQrr3QqrLFkJerXG2MAACUoLGxvs3Cz968zNnBz9vDz923wMqw
        uMR+hKBfaapkesRder9PbLNNbbRPb7ZQcbtTdL1Udb5ScrxTcbxVcb1bc75heMRheMRle8ljechhd8Vn
        fsxxidFvicxtiMtsh8prhslvi8x0kc5yj81ti8pqiclwjct1jchqfsNsfsl3ispofq97lbenvNCwvtCp
        scOGjaVQY4IAAMLN2MbR28bS3MHN17/L1b7K1LfCz7G8yZKZv11mt1drwlRuuk1rsk1utk5vuE9xulF0
        vVR1vlFyvFNyvFZ2v1p2wGN8xW+Hz3aP1XKJ0XaM1HiO1XaM03WL0W+Jz22Hzm2IzW6MzXKRznCPzGyL
        y2qKym+Py3yU0W+DxnSGzHyNz3iNx42myqK0yai3y6CpwWBri0NXeQAAvsjRw83WxNDZw8/Yw9DYxNHZ
        usXOtb/OkZnEYWrAT1/AVW29TWy2TW+5TXC5T3K7UnW+VXXAU3O9VHK8V3S+W3TAYnrFbIXOcovRcYnP
        eI3UeI7VeI7Vdo3VcYrRbYbPb4jQborNbozLbY3MaorMbY7Nc5PNgpnUeYvJdoXKe4rUcobLm7Tdr8Pa
        j5+4aHmaPVBxOU1vAADAy9PAy9O+y9O5xc69ydK9ytKyvMW1vtRsdrhibstIWLpMY7VNbLdMbrlLb7lO
        cbtTdb9VdcBTc75ScbxYc8BXb8BVa75acsFgd8JqgMp3itR5jNV6jdZ5jtdviNBshc5widFtic1siM1q
        ic5qic5vkM93l9GDn9eAl9N4idRgbslneMmTqduyx+CWqsWMoLxjcI0+UXIAAMLN1cTP18bS2sXP2cXQ
        2sDP2LXCzKmy0VRftV1uzFFkvk1luU1rt0xtuUxuuk9xvVd3w1d3w1V1wFNxvFZvv0ZesElgtUhgtUFX
        qkxgs1hqvlBhtGBxwWl+ymV9x2uEzHKK1G6I0GuGzmmFz2qI0HOS0n2c1Yej2YOa1Gh4yEtYv2l50XmJ
        zKCx0pqxzKO30oKPqUxdfgAAxdDZx9LaydTcxtHZxdDaxNHbvMnXrLXURlGwXG7MXHS/TWq2TGy3Tm66
        T3C+VnbBXn3JXn7HXXzGWHS/UWq6Rl2wIziOMkiaPVOkPFGjIjSHKjyPUma5XHPBY3vFcInPdY7UcYrS
        bIfRaoXPbIvSd5fWg6LajKfbhZzVV2m6UGHDb4DWVGK8RVSZRVp5W2+JWGeBQlR1AADBy9TF0NjJ1NzG
        0tnI093J1d7AzdewvNNCTaFOXrxQZ7NKabBNbbhQcLtVdsFcfMZjgstmgsxmgstgesRYcb5OaLlKY7lQ
        aLhac71je8RlfsRie8JnfsplfMlwh9F2kNZ4ktd3kNdyjNVvidJwj9R8ndmGptuPqtuIoNRgdL5ldsp0
        gtZFULlPYK88T3Q7Tm86TW47TW4AAL/I0b3H0L/K0rvGzr3I0MHN1brG0LfE03SCtFZkszxSmU5rslFv
        uVV1v1p7xmKAy2eEzWmFzWqGzGR/yVt1wU9ruU9pvF95x3CJ03eR1n+a3YCa3m2FzXKK0nmR13aS1XiU
        1XmT13iS2HWQ1nWT1n+g2oqq3ZSv3ZKo22uCwneG03B21TxIulRmq0BSeTtObzZJaTZGZwAAx8/Zx9Ha
        yNPbw83WxM/XxtHavcnTvMbUnqe7T1eBMkmAUGytVHC6WHjBX4DIaIbMbIjObInObYnPa4bPXXnDUm+7
        Tmy6WnbFbITRdI3VfpncdI/RcYvPd5DWeZLWdpLVdpLUeJPVepPZepPZe5fYgaDbjqzem7XjmrDgan+8
        annIQ0iuV2S/UmOWP1N2Ok1uN0prNkdnAADFztjFz9fI0trGztfI0drJ1d3CzNXByterssZBS2wvRnhO
        a6pScLlZd8FhgMdriMxwi89wi89uic1shcxie8VXcr1PbLlXccFngc5yi9V1j9Vuic10jtF3kdV4kdV2
        kdZ1kNZ2kdV4ktZ6k9h8l9qAndqOq9yct+ORqNdfda1ccK11ir2Op8t4jqZqf5hUaIQ+UnI3SWoAAMLL
        1sTN1sjR2sbM1cjP2cjT28HK08LK16WrwC06Xy5FeU1pqFJut1ZzvVp5wWF/wmiExWqEx2qFx2uEymJ6
        w1dyvFBtuVNvu2WBzG2H0myFz2+IznSO0HWP0HWP0HSO0XSP0XeR0HqT0n6X1n+W1YCY1I6p2pu24ISb
        yl11qWmBq6zI373V5LvP3sDW5LjN34qct05hggAAvsbSucLLu8TNtbzFu8TMws3TvsfRvsXRkZOqJDRe
        MUuATWeoUmu0U224TmizTmitWnW1Z4C+bYTCb4TFZHu/XHe9VHK7Um+6Y4DKbIfRaYTObYbOcozNcIvK
        bofHbIXGcYnLdY3Mdo7NepHRdo3LeI/LjabYnLXif5bHXXWqXnmgpMDWw9jjwtPex9jiwtPgk6K6VGeJ
        AADAydbAydTFztjBytTBy9TBytS4wM2zuMdxc4wgMV0wTIFKZKZMZq5UbLhKYrAzS5Y4TpE1SYM8UIdN
        YZ1FWZpUbbFceL9Wc71jgMpuidBths9zjNJ0jdBie7xmfLxbcK1XbapYbq1OY6VSZqpheLxwh8iOp9uZ
        seB6kcJYcKVXcJmatM3C1+TC0tvI2OHE1N+Vo7lWZokAAL3J1b3I1MLN17/J08HM1MPN173F07zC1lda
        eRotWi1Jf0hipURep09os1Jqt1BptEZdpjpOlig8gyxEh0BXnk9psVd0vFd1v2aEzHOP0nGK0G2GzGF5
        wkZdpkdgpDRMjR85ey9HikNaoFxzu2iCyG6JypCr3py14nmPw1hvp1hvnHuTr7HG07TEzcDP2L3O142b
        r1RkhQAAt8DOvcfRws3UwcvVwM3UwMzVvMbRsLbMPkdqGS9bKEV5SWOlP1miRV2nT2axUmuzXHe8YnvA
        W3S5TWSuRV6nRmKsSGexUnO8ZYXMcpLUbYjNUmu0Q1uqR2CwTGewUGywXHi8aIHGaILIYHu/V3e2a43H
        ka/dnLXlbYS7TWWeVG2daIGmscbXwNHcw9Tevc3Zi5itU2KFAACzu8qut7+uucCfrragsLiuvca1v8yi
        p78rN10aL10hPm9DYKJFYKpAWqI8VJs9VJpDWZ0/VZk7UJQ3TZU2T5k6V6BDZKxSc7tjhMtsidBdeb9F
        Xqs4T6E5UJ87VZ49WJ1FX6VNZqtKYqpPa7BggL6FqNmbt+KOqNxXcKpEX5dPaZ1Xb5uZr8a90N3F1uLD
        09+Sn7VYZ4wAALa/z7rCzr/J1LPAzrLBz7PC0Ku0xnR4kyArVxcvWyA+bj9dnklkrk1ps1FttUhkqUVg
        pD1XnDVNkzROlDlTmz5boVBwtV19w2eHzWWDyll2vUpkrz1WpDZOmzJLkzhRlkNcoVBprl54vW+Lzn2d
        1Za245u34XWPyEdioUNgmkplm1Zun3+Wsb3Q3sjX48PS34+bs1prjwAAtMDTu8TTsbrIr7zMssDRt8XW
        rrfMc3eVHCpXGC5ZID9uPlycSWOuTmu4VXO+WHfAWXbAXXjCW3a+Wna9WXW8Wne9ZILIaojNcIzSa4fN
        ZIDGXHfAXHbAYHnAZH7CaILFbojLcozPdI/SepbXg6LZnLvlmLLha4XDSmWmP1qXRF+VVW+gdIuqt8fT
        yNfgyNbhlaC4X3GUAAC1wte1v8+1wM20ws+ywdGpt8mxutBuc5IaKlgYLVkjQXFBXp1HZbBMa7pWcsFa
        dcNeesZdfMZbesRff8hnhMxric5ui9F0jtJ1j9RvitBth85uh9FyjNV2kdV3kdR2kNN2kNN3kdR4kdV3
        kdSBntefvueVr+BogsFJZqU9V5JDXJNQapxnfqChsr3A0Ni9x9CDjKJbaI4AAKKzzbC6zbrF1LTC0bjH
        16y6zaGrxFZegBstVxgvWyNCckFfnkllsExruVJvwVZyxFt4xlx7xl58x2SCzGuG0HCK0nOO1HWQ1XSN
        03CK0XCJ0nKL1XWN13iR13eR1XeQ1XeP1XWO1HaO1neQ1YSi2KXD6Zu25G2HxUpnpj5ZlD9YkE9pm2F5
        m6S2wsjX38fR24uVql5skQAApbrZsr/WvMXXsL7Pp7XHZXGGP0tpJDheGTFbFzFdIT9vPVybSGWwTGq4
        Tm2/U3HDWXjGX3zHYn/KZoPNaYjRbYrScI3ScozTc4vUcYrUcInTconUdIvXdo3Yd4/YeI/Xdo3Uc4zT
        c4vTd5DWhKDYpsTpm7XjaoTCUW6tQ16ZPVWORWCSY3yaqL3IxdXfxtPbh5OnXW2PAACftNesutSyvNCv
        vM+mssY+RmAlNVQaLlYZMVwWL10cPGs8XZlIZa5LardNa7tRb8BbecZkf8tmgcxphc9rh9FridNsitNv
        itNwi9RvidRviNRwiNVxiNZzidd1jNZ1jNZ0jdR1jdV1jdR3kNWBndakwuqPqdxeebpYdrI5VI06UoxB
        XY5yiaWtws3G2eDG09qHkqhdbo8AAJGrzaCxz6Syya68z56nvDE7UyY1VBQoURcwWxMtWhc0YzNSjUpn
        rE1qtk9rulBuvVt4xmSAy2iEzmqFzmyHz26K0W2K0XCK0nCL0m+J03CH1XCH1XGI1XOK1nWM13WM1nWN
        1HeQ1n2X232Z2IOg15646H6Vz1VusEdjnzhSjD1Vj0Vfk3GKpaC0v73P1cTR2oGMo15sjQAAaoWkjKfG
        orXRq7XMjpGnKjJJJzZUEylQGTRfFS9dFi9hJEF6RGGjTWqyT2u3UG29W3fGZYHMaYXObIjPbYnObYvQ
        b4zRcIzRb4zRcIvUcYrVcYjVconWc4vWdIvWdIzWdYzVd5LWgp7bh6XciqfdkqrgcYfGR1+hPFiUNk+J
        Q1yXRl+UeY6prL3JusvTqrXAXGeAWGaHAAAxSWRyjqyTqMafqcFgYncfK0AhMU0ULlUVM10PK1gSLV0a
        OGwzT41LZ6tQbLVUbrxdecVngstqhs1sic5ui89sjM9ujtByj9JxjtNzjtZzjNZyi9Zyi9VzjNZ1jdV2
        jtV3kNZ8lteGot2JqOCKpt6Bm9Zhd7g9U5QtSYU4U4xDXphLZZWRpr22xtLH1d/AydVveJFZaIgAABsw
        RjRLYldshU1aciIuRSA0TR40UhQwWRIvWhAuWxAvXhQzZiI/ejVTk0torFRwuF16wWeDyWuJzG2LzXGO
        znCPz3CPznCQ0HCP0XKQ1HOP1nSN13GL1XGM1nON13WP13eS1nuY14Og3IKg2n2b1myHyEllpi1KiSZD
        fzFMhzZSikhhipuvwrnJ1crY4cDK1m11j1hniAAAGClAFytAHC9EGS1DKDxWSmGAMUdrFi9bFjJeFDVi
        FDViFDVkGTdtI0J7LUyHR2WjV3WzYoG/aYnGbIvIbozIbYvHa4rGZYfDaYvJcJHQc5LSdJHTcY7TcIzW
        cYzXdJDZeJbafJvZf53afpvZb4zLT26uPl+eO1ybOFSSNVCLQF2SZHyiqbvNvcrUyNTcwcnWcnqSWGeI
        AAAZKUAYKT4YKT4dMEc/VHBCWXpAUnciNV8bM10XNWEUNWEXOGYZOWkXN2kePXEjQngyUYhCYJpQbahX
        dLBXdLFVc65ScKtKbKhTdbBggb1sicZyjsxyj9BwkNNxj9VykdZ3mNd6mth3mNZrispMa6tFZKM7WplM
        aqk/Wpk5VZE+XZBviqqqvc60wMu/ytK1vctnb4dUY4QAABwpQRspPxkqQCM4UkFUc0NTc0NNcUNPdhoy
        Whs1XxAuWhIwXQ4uXA8vXhQzYRQzYRg4aCFAcyZDdypIfCxLgDBPhTNRhzVTizxZk0JfmU1po1RwrVp2
        tV56u1t7u1p7u12DwWCGxFl+vFN0tU1rrEJhoDhXlj1cmDRRjD1XkkdkkYqjvrfI2cHM2MXT3LzF0mtz
        jVRihQAAJjNPITRNOE5pSGKAaX+ee4qrTld5RVF0Iz1hHDlgFTJdEzBdETFfFjZkETBdBSZTDCxZDyxb
        ES1cFTNhEi9eFTJjGDdpGThsHz1yJUF2LUV9L0iBM0yIMkyKLEuJOFuZR2+sTnu4THq3U3u6RGOiOlmW
        QGSfOlyXP1yVSGGWWHOYkaa9ucPTwMrVx9Pcv8jVa3OOVmSIAAAvPls8UHBQaYpaepmAnbx/j69ZYH49
        R2UOKEoNK1ISLlgSMFwSM2AbO2gYOmYLKlYVM18YNWITL1wWMF4NJ1QMKFcNLF0MK14QLWAPKl0ULWEY
        MmciO3QgPHYXNHEkR4Q6Y6BMerdNf71Pfbs9YZ8+Xpo7YJpFaKNWcqpWbZp9k7Got8u9xNPCy9bH09u5
        ws9gaIRTYYUAAFVjf0NYez5WeFFxj4OkwpytzJSbt0pRbxAmSAoqTxk1XB87Yxk0Xxo2Yxk3YxQwWRs3
        YB05ZB86ZR04YxcxXhItWhAwXxU1aBc1aRg2aRMxZBw5bCM9dSxHgyhFgCNGgzBYl0Rvr1F9vkZwsTla
        mjdalDFYkUpuqFx3rlJoknKHoqOxw6u0w6iyvrbBybjAzmNsh1VjhQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>